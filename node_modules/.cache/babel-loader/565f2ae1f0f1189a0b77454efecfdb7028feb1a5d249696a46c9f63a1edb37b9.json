{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudheer.kokolu\\\\OneDrive - Sonata Software Limited\\\\FJA_Pricing_Tasks\\\\OAuthFrontend\\\\crudapplication\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { Button, Container } from '@mui/material';\nimport DataTable from './components/DataTable';\nimport CrudDialog from './components/CrudDialog';\nimport ConfirmDialog from './components/ConfirmDialog';\nimport userData from './data/userData.json'; // Import JSON data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(userData); // Initialize state with imported JSON\n  const [isCrudDialogOpen, setCrudDialogOpen] = useState(false);\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const handleAdd = () => {\n    setSelectedRow(null);\n    setCrudDialogOpen(true);\n  };\n  const handleEdit = row => {\n    setSelectedRow(row);\n    setCrudDialogOpen(true);\n  };\n  const handleDelete = id => {\n    setData(data.filter(item => item.id !== id));\n    setConfirmDialogOpen(false);\n  };\n  const handleSave = row => {\n    if (row.id) {\n      setData(data.map(item => item.id === row.id ? row : item));\n    } else {\n      setData([...data, {\n        id: Date.now(),\n        ...row\n      }]);\n    }\n    setCrudDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAdd,\n      style: {\n        margin: '20px 0'\n      },\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: data,\n      onEdit: handleEdit,\n      onDelete: id => {\n        setSelectedRow({\n          id\n        });\n        setConfirmDialogOpen(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CrudDialog, {\n      open: isCrudDialogOpen,\n      onClose: () => setCrudDialogOpen(false),\n      onSave: handleSave,\n      initialData: selectedRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      open: isConfirmDialogOpen,\n      onClose: () => setConfirmDialogOpen(false),\n      onConfirm: () => handleDelete(selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ABfAUMzvwfqWirmW09BLiReCnYo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Container","DataTable","CrudDialog","ConfirmDialog","userData","jsxDEV","_jsxDEV","App","_s","data","setData","isCrudDialogOpen","setCrudDialogOpen","isConfirmDialogOpen","setConfirmDialogOpen","selectedRow","setSelectedRow","handleAdd","handleEdit","row","handleDelete","id","filter","item","handleSave","map","Date","now","children","variant","color","onClick","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","open","onClose","onSave","initialData","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/sudheer.kokolu/OneDrive - Sonata Software Limited/FJA_Pricing_Tasks/OAuthFrontend/crudapplication/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport { Button, Container } from '@mui/material';\nimport DataTable from './components/DataTable';\nimport CrudDialog from './components/CrudDialog';\nimport ConfirmDialog from './components/ConfirmDialog';\nimport userData from './data/userData.json'; // Import JSON data\n\nfunction App() {\n  const [data, setData] = useState(userData); // Initialize state with imported JSON\n  const [isCrudDialogOpen, setCrudDialogOpen] = useState(false);\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  const handleAdd = () => {\n    setSelectedRow(null);\n    setCrudDialogOpen(true);\n  };\n\n  const handleEdit = (row) => {\n    setSelectedRow(row);\n    setCrudDialogOpen(true);\n  };\n\n  const handleDelete = (id) => {\n    setData(data.filter((item) => item.id !== id));\n    setConfirmDialogOpen(false);\n  };\n\n  const handleSave = (row) => {\n    if (row.id) {\n      setData(data.map((item) => (item.id === row.id ? row : item)));\n    } else {\n      setData([...data, { id: Date.now(), ...row }]);\n    }\n    setCrudDialogOpen(false);\n  };\n\n  return (\n    <Container>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAdd} style={{ margin: '20px 0' }}>\n        Add User\n      </Button>\n      <DataTable data={data} onEdit={handleEdit} onDelete={(id) => {\n        setSelectedRow({ id });\n        setConfirmDialogOpen(true);\n      }} />\n      <CrudDialog\n        open={isCrudDialogOpen}\n        onClose={() => setCrudDialogOpen(false)}\n        onSave={handleSave}\n        initialData={selectedRow}\n      />\n      <ConfirmDialog\n        open={isConfirmDialogOpen}\n        onClose={() => setConfirmDialogOpen(false)}\n        onConfirm={() => handleDelete(selectedRow?.id)}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,QAAQ,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACM,QAAQ,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACO,gBAAgB,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACe,mBAAmB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMmB,SAAS,GAAGA,CAAA,KAAM;IACtBD,cAAc,CAAC,IAAI,CAAC;IACpBJ,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMM,UAAU,GAAIC,GAAG,IAAK;IAC1BH,cAAc,CAACG,GAAG,CAAC;IACnBP,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMQ,YAAY,GAAIC,EAAE,IAAK;IAC3BX,OAAO,CAACD,IAAI,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC9CP,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMU,UAAU,GAAIL,GAAG,IAAK;IAC1B,IAAIA,GAAG,CAACE,EAAE,EAAE;MACVX,OAAO,CAACD,IAAI,CAACgB,GAAG,CAAEF,IAAI,IAAMA,IAAI,CAACF,EAAE,KAAKF,GAAG,CAACE,EAAE,GAAGF,GAAG,GAAGI,IAAK,CAAC,CAAC;IAChE,CAAC,MAAM;MACLb,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAEY,EAAE,EAAEK,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE,GAAGR;MAAI,CAAC,CAAC,CAAC;IAChD;IACAP,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA,CAACN,SAAS;IAAA4B,QAAA,gBACRtB,OAAA,CAACP,MAAM;MAAC8B,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEd,SAAU;MAACe,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAL,QAAA,EAAC;IAE7F;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/B,OAAA,CAACL,SAAS;MAACQ,IAAI,EAAEA,IAAK;MAAC6B,MAAM,EAAEpB,UAAW;MAACqB,QAAQ,EAAGlB,EAAE,IAAK;QAC3DL,cAAc,CAAC;UAAEK;QAAG,CAAC,CAAC;QACtBP,oBAAoB,CAAC,IAAI,CAAC;MAC5B;IAAE;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACL/B,OAAA,CAACJ,UAAU;MACTsC,IAAI,EAAE7B,gBAAiB;MACvB8B,OAAO,EAAEA,CAAA,KAAM7B,iBAAiB,CAAC,KAAK,CAAE;MACxC8B,MAAM,EAAElB,UAAW;MACnBmB,WAAW,EAAE5B;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF/B,OAAA,CAACH,aAAa;MACZqC,IAAI,EAAE3B,mBAAoB;MAC1B4B,OAAO,EAAEA,CAAA,KAAM3B,oBAAoB,CAAC,KAAK,CAAE;MAC3C8B,SAAS,EAAEA,CAAA,KAAMxB,YAAY,CAACL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEM,EAAE;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAAC7B,EAAA,CApDQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}