{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudheer.kokolu\\\\OneDrive - Sonata Software Limited\\\\FJA_Pricing_Tasks\\\\OAuthFrontend\\\\crudapplication\\\\src\\\\pages\\\\CrudDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Button, Container, Typography, Box } from '@mui/material';\nimport DataTable from '../components/DataTable';\nimport CrudDialog from '../components/CrudDialog';\nimport ConfirmDialog from '../components/ConfirmDialog';\nimport userData from '../data/userData.json'; // Import JSON data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CrudDashboard() {\n  _s();\n  // State to manage data\n  const [data, setData] = useState([]);\n  const [isCrudDialogOpen, setCrudDialogOpen] = useState(false);\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  // State to manage the current view (table view or details view)\n  const [view, setView] = useState('table'); // Options: 'table' or 'details'\n\n  // Fetch data (simulating with JSON file here)\n  useEffect(() => {\n    // Simulate an API call\n    setTimeout(() => {\n      setData(userData);\n    }, 500);\n  }, []);\n\n  // Memoized table data for optimized rendering\n  const memoizedData = useMemo(() => data, [data]);\n\n  // Add a new user\n  const handleAdd = useCallback(() => {\n    setSelectedRow(null);\n    setCrudDialogOpen(true);\n  }, []);\n\n  // Edit a user\n  const handleEdit = useCallback(row => {\n    setSelectedRow(row);\n    setCrudDialogOpen(true);\n  }, []);\n\n  // Delete a user\n  const handleDelete = useCallback(id => {\n    setData(prevData => prevData.filter(item => item.id !== id));\n    setConfirmDialogOpen(false);\n  }, []);\n\n  // Save user data (add or update)\n  const handleSave = useCallback(row => {\n    setData(prevData => {\n      if (row.id) {\n        return prevData.map(item => item.id === row.id ? row : item);\n      }\n      return [...prevData, {\n        id: Date.now(),\n        ...row\n      }];\n    });\n    setCrudDialogOpen(false);\n  }, []);\n\n  // View details of a user\n  const handleViewDetails = useCallback(row => {\n    setSelectedRow(row);\n    setView('details');\n  }, []);\n\n  // Back to table view\n  const handleBackToTable = () => {\n    setView('table');\n    setSelectedRow(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [view === 'table' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAdd,\n        style: {\n          margin: '20px 0'\n        },\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        data: memoizedData,\n        onEdit: handleEdit,\n        onDelete: id => {\n          setSelectedRow({\n            id\n          });\n          setConfirmDialogOpen(true);\n        },\n        onViewDetails: handleViewDetails // Pass view details handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CrudDialog, {\n        open: isCrudDialogOpen,\n        onClose: () => setCrudDialogOpen(false),\n        onSave: handleSave,\n        initialData: selectedRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n        open: isConfirmDialogOpen,\n        onClose: () => setConfirmDialogOpen(false),\n        onConfirm: () => handleDelete(selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), view === 'details' && selectedRow && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), \" \", selectedRow.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), \" \", selectedRow.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: handleBackToTable,\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Back to Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(CrudDashboard, \"YkT/cG8cSRYStKgWNx8FZu85t2Y=\");\n_c = CrudDashboard;\nvar _c;\n$RefreshReg$(_c, \"CrudDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Button","Container","Typography","Box","DataTable","CrudDialog","ConfirmDialog","userData","jsxDEV","_jsxDEV","Fragment","_Fragment","CrudDashboard","_s","data","setData","isCrudDialogOpen","setCrudDialogOpen","isConfirmDialogOpen","setConfirmDialogOpen","selectedRow","setSelectedRow","view","setView","setTimeout","memoizedData","handleAdd","handleEdit","row","handleDelete","id","prevData","filter","item","handleSave","map","Date","now","handleViewDetails","handleBackToTable","children","variant","color","onClick","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","onViewDetails","open","onClose","onSave","initialData","onConfirm","gutterBottom","name","email","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/sudheer.kokolu/OneDrive - Sonata Software Limited/FJA_Pricing_Tasks/OAuthFrontend/crudapplication/src/pages/CrudDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { Button, Container, Typography, Box } from '@mui/material';\r\nimport DataTable from '../components/DataTable';\r\nimport CrudDialog from '../components/CrudDialog';\r\nimport ConfirmDialog from '../components/ConfirmDialog';\r\nimport userData from '../data/userData.json'; // Import JSON data\r\n\r\nexport default function CrudDashboard() {\r\n  // State to manage data\r\n  const [data, setData] = useState([]);\r\n  const [isCrudDialogOpen, setCrudDialogOpen] = useState(false);\r\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n  // State to manage the current view (table view or details view)\r\n  const [view, setView] = useState('table'); // Options: 'table' or 'details'\r\n\r\n  // Fetch data (simulating with JSON file here)\r\n  useEffect(() => {\r\n    // Simulate an API call\r\n    setTimeout(() => {\r\n      setData(userData);\r\n    }, 500);\r\n  }, []);\r\n\r\n  // Memoized table data for optimized rendering\r\n  const memoizedData = useMemo(() => data, [data]);\r\n\r\n  // Add a new user\r\n  const handleAdd = useCallback(() => {\r\n    setSelectedRow(null);\r\n    setCrudDialogOpen(true);\r\n  }, []);\r\n\r\n  // Edit a user\r\n  const handleEdit = useCallback((row) => {\r\n    setSelectedRow(row);\r\n    setCrudDialogOpen(true);\r\n  }, []);\r\n\r\n  // Delete a user\r\n  const handleDelete = useCallback((id) => {\r\n    setData((prevData) => prevData.filter((item) => item.id !== id));\r\n    setConfirmDialogOpen(false);\r\n  }, []);\r\n\r\n  // Save user data (add or update)\r\n  const handleSave = useCallback((row) => {\r\n    setData((prevData) => {\r\n      if (row.id) {\r\n        return prevData.map((item) => (item.id === row.id ? row : item));\r\n      }\r\n      return [...prevData, { id: Date.now(), ...row }];\r\n    });\r\n    setCrudDialogOpen(false);\r\n  }, []);\r\n\r\n  // View details of a user\r\n  const handleViewDetails = useCallback((row) => {\r\n    setSelectedRow(row);\r\n    setView('details');\r\n  }, []);\r\n\r\n  // Back to table view\r\n  const handleBackToTable = () => {\r\n    setView('table');\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {view === 'table' && (\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleAdd}\r\n            style={{ margin: '20px 0' }}\r\n          >\r\n            Add User\r\n          </Button>\r\n          <DataTable\r\n            data={memoizedData}\r\n            onEdit={handleEdit}\r\n            onDelete={(id) => {\r\n              setSelectedRow({ id });\r\n              setConfirmDialogOpen(true);\r\n            }}\r\n            onViewDetails={handleViewDetails} // Pass view details handler\r\n          />\r\n          <CrudDialog\r\n            open={isCrudDialogOpen}\r\n            onClose={() => setCrudDialogOpen(false)}\r\n            onSave={handleSave}\r\n            initialData={selectedRow}\r\n          />\r\n          <ConfirmDialog\r\n            open={isConfirmDialogOpen}\r\n            onClose={() => setConfirmDialogOpen(false)}\r\n            onConfirm={() => handleDelete(selectedRow?.id)}\r\n          />\r\n        </>\r\n      )}\r\n      {view === 'details' && selectedRow && (\r\n        <Box>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            User Details\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            <strong>Name:</strong> {selectedRow.name}\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            <strong>Email:</strong> {selectedRow.email}\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={handleBackToTable}\r\n            style={{ marginTop: '20px' }}\r\n          >\r\n            Back to Table\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}